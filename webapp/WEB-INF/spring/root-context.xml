<?xml version="1.0" encoding="UTF-8"?>

<!-- xml은 html과 비슷하게 열고 닫는 태그로 구성되어 있으나, html 코드는 고정되어 있고, xml 태그는 확장성이 무한하다는 
	점이 다르다. 그래서, 외부 설정 정보를 가지고 시스템과 연동할 때 사용한다. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property> 
			<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:XE"></property> -->

		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE" />

		<property name="username" value="admin" />
		<property name="password" value="1234" />
	</bean>

	<!-- 아래 코드에서 dataSource 생성 시, 위의 작성한 코드를 가져와서 사용한다. -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<mybatis-spring:scan base-package="kr.icia.mapper" />

	<!-- 스프링 프레임워크에서 해당 패키지를 살펴보고, 컴포넌트와 관련 어노테이션을 만나면 그 부분을 자동 객체화 처리 -->
	<context:component-scan
		base-package="kr.icia.service" />
	<context:component-scan
		base-package="kr.icia.utils" />

</beans>
